/*
 * Copyright (c) 2022-2024 Cisco Systems, Inc. and/or its affiliates
 * All rights reserved
 * https://github.com/duosecurity/duo_api_csharp
 */

using Newtonsoft.Json;
using duo_api_csharp.Classes;
using System.ComponentModel.DataAnnotations.Schema;

namespace duo_api_csharp.Models.v1
{
	/// <summary>
	/// Duo WebAuthN response data
	/// This represents read-only API response data that cannot be updated via the API
	/// </summary>
    public class DuoWebAuthNResponseModel : DuoModelBase
    {
		/// <summary>
		/// Free-form label for this WebAuthn credential.
		/// </summary>
		[JsonProperty("credential_name")]
		public string? CredentialName { get; set; }
		
		/// <summary>
		/// A derived nickname for this WebAuthn credential. This value cannot be changed by a user or admin.
		/// Present when attached to a user. Example: Windows Hello or iCloud Keychain.
		/// </summary>
		[JsonProperty("label")]
		public string? Label { get; set; }
		
		/// <summary>
		/// The credential's Duo-specific identifier.
		/// </summary>
		[JsonProperty("webauthnkey")]
		public string? WebAuthNKey { get; set; }
		
		[JsonProperty("date_added")]
		private long? _DateAdded { get; set; }
		
		/// <summary>
		/// The Unix timestamp of when this WebAuthn credential was registered in Duo.
		/// </summary>
		[NotMapped]
		public DateTime? DateAdded
		{
			get
			{
				return Epoch.FromUnix(_DateAdded);
			}
			set
			{
				_DateAdded = Epoch.ToUnix(value);
			}
		}
		
		[JsonProperty("date_last_used")]
		private long? _DateLastUsed { get; set; }
		
		/// <summary>
		/// The Unix timestamp of when this WebAuthn credential was last used to authenticate with Duo.
		/// If null, this credential has not been used yet.
		/// </summary>
		[NotMapped]
		public DateTime? DateLastUsed
		{
			get
			{
				return Epoch.FromUnix(_DateLastUsed);
			}
			set
			{
				_DateLastUsed = Epoch.ToUnix(value);
			}
		}
		
		/// <summary>
		/// If true, this credential can be used from multiple devices.
		/// If false, this credential can only be used on one device.
		/// </summary>
		[JsonProperty("backup_eligible")]
		[JsonConverter(typeof(DuoBoolConverter))]
		public bool? BackupEligible { get; set; }
		
		/// <summary>
		/// If true, this credential has been backed up and can be used from multiple devices.
		/// If false, this credential has not been backed up.
		/// </summary>
		[JsonProperty("backup_status")]
		[JsonConverter(typeof(DuoBoolConverter))]
		public bool? BackupStatus { get; set; }
		
		/// <summary>
		/// If true, this credential can be used for both MFA and Passwordless authentication.
		/// If false, this credential can only be used for MFA authentication.
		/// </summary>
		[JsonProperty("passwordless_authorized")]
		[JsonConverter(typeof(DuoBoolConverter))]
		public bool? PasswordlessAuthorised { get; set; }
		
		/// <summary>
		/// If true, the authenticator is capable of locally verifying the userâ€™s identity.
		/// If false, the authenticator cannot perform user verification.
		/// </summary>
		[JsonProperty("uv_capable")]
		[JsonConverter(typeof(DuoBoolConverter))]
		public bool? UVCapable { get; set; }
		
		/// <summary>
		/// A unique identifier that conveys the authenticator's make and model, or the passkey's provider identity.
		/// This value cannot be verified as accurate by Duo.
		/// </summary>
		[JsonProperty("aaguid")]
		public string? GUID { get; set; }
		
		/// <summary>
		/// An identifier randomly generated by the authenticator for this WebAuthn credential.
		/// </summary>
		[JsonProperty("credential_id")]
		public string? CredentialID { get; set; }
		
		/// <summary>
		/// The registration flow that was used to register this WebAuthn credential.
		/// One of platform, cross-platform, or unknown.
		/// </summary>
		[JsonProperty("registered_as")]
		public string? RegisteredAs { get; set; }
		
		/// <summary>
		/// An array of values the browser will use to try and communicate with an authenticator during a Duo authentication attempt.
		/// </summary>
		[JsonProperty("transports")]
		public IEnumerable<string>? Transports { get; set; }
		
		/// <summary>
		/// Selected information about the end user attached to this WebAuthn credential.
		/// </summary>
		[JsonProperty("user")]
		public DuoUserResponseModel? User { get; set; }
		
		/// <summary>
		/// Selected information about the administrator attached to this WebAuthn credential.
		/// </summary>
		[JsonProperty("admin")]
		public DuoAdminResponseModel? Admin { get; set; }
    }
}